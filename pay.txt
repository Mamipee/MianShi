package BOOT-INF.classes.cn.hsz.controller;

import cn.hsz.utils.HttpKit;
import cn.hsz.utils.PaymentKit;
import java.io.UnsupportedEncodingException;
import java.util.HashMap;
import java.util.Map;

public class PaymentApi {
  private static String unifiedOrderUrl = "https://api.mch.weixin.qq.com/pay/unifiedorder";
  
  public static String pushOrder(Map<String, String> params) {
    return HttpKit.post(unifiedOrderUrl, PaymentKit.toXml(params));
  }
  
  private static Map<String, String> request(String url, Map<String, String> params, String paternerKey) {
    params.put("nonce_str", System.currentTimeMillis() + "");
    String sign = PaymentKit.createSign(params, paternerKey);
    params.put("sign", sign);
    String xmlStr = HttpKit.post(url, PaymentKit.toXml(params));
    return PaymentKit.xmlToMap(xmlStr);
  }
  
  public static String getDeepLink(String appId, String prepayId, String paternerKey) {
    Map<String, String> params = new HashMap<>();
    params.put("appid", appId);
    params.put("noncestr", System.currentTimeMillis() + "");
    params.put("package", "WAP");
    params.put("prepayid", prepayId);
    params.put("timestamp", (System.currentTimeMillis() / 1000L) + "");
    String sign = PaymentKit.createSign(params, paternerKey);
    params.put("sign", sign);
    String string1 = PaymentKit.packageSign(params, true);
    String string2 = "";
    try {
      string2 = PaymentKit.urlEncode(string1);
    } catch (UnsupportedEncodingException unsupportedEncodingException) {}
    return "weixin://wap/pay?" + string2;
  }
  
  private static String orderQueryUrl = "https://api.mch.weixin.qq.com/pay/orderquery";
  
  public static Map<String, String> queryByTransactionId(String appid, String mch_id, String paternerKey, String transaction_id) {
    Map<String, String> params = new HashMap<>();
    params.put("appid", appid);
    params.put("mch_id", mch_id);
    params.put("transaction_id", transaction_id);
    return request(orderQueryUrl, params, paternerKey);
  }
  
  public static Map<String, String> queryByOutTradeNo(String appid, String mch_id, String paternerKey, String out_trade_no) {
    Map<String, String> params = new HashMap<>();
    params.put("appid", appid);
    params.put("mch_id", mch_id);
    params.put("out_trade_no", out_trade_no);
    return request(orderQueryUrl, params, paternerKey);
  }
  
  private static String closeOrderUrl = "https://api.mch.weixin.qq.com/pay/closeorder";
  
  public static Map<String, String> closeOrder(String appid, String mch_id, String paternerKey, String out_trade_no) {
    Map<String, String> params = new HashMap<>();
    params.put("appid", appid);
    params.put("mch_id", mch_id);
    params.put("out_trade_no", out_trade_no);
    return request(closeOrderUrl, params, paternerKey);
  }
  
  public static String refundUrl = "https://api.mch.weixin.qq.com/secapi/pay/refund";
  
  private static String refundQueryUrl = "https://api.mch.weixin.qq.com/pay/refundquery";
  
  private static Map<String, String> baseRefundQuery(Map<String, String> params, String appid, String mch_id, String paternerKey) {
    params.put("appid", appid);
    params.put("mch_id", mch_id);
    return request(refundQueryUrl, params, paternerKey);
  }
  
  public static Map<String, String> refundQueryByTransactionId(String appid, String mch_id, String paternerKey, String transaction_id) {
    Map<String, String> params = new HashMap<>();
    params.put("transaction_id", transaction_id);
    return baseRefundQuery(params, appid, mch_id, paternerKey);
  }
  
  public static Map<String, String> refundQueryByOutTradeNo(String appid, String mch_id, String paternerKey, String out_trade_no) {
    Map<String, String> params = new HashMap<>();
    params.put("out_trade_no", out_trade_no);
    return baseRefundQuery(params, appid, mch_id, paternerKey);
  }
  
  public static Map<String, String> refundQueryByOutRefundNo(String appid, String mch_id, String paternerKey, String out_refund_no) {
    Map<String, String> params = new HashMap<>();
    params.put("out_refund_no", out_refund_no);
    return baseRefundQuery(params, appid, mch_id, paternerKey);
  }
  
  public static Map<String, String> refundQueryByRefundId(String appid, String mch_id, String paternerKey, String refund_id) {
    Map<String, String> params = new HashMap<>();
    params.put("refund_id", refund_id);
    return baseRefundQuery(params, appid, mch_id, paternerKey);
  }
  
  private static String downloadBillUrl = "https://api.mch.weixin.qq.com/pay/downloadbill";
  
  public static Map<String, String> downloadBill(String appid, String mch_id, String paternerKey, String billDate) {
    return downloadBill(appid, mch_id, paternerKey, billDate, null);
  }
  
  public static Map<String, String> downloadBill(String appid, String mch_id, String paternerKey, String billDate, BillType billType) {
    Map<String, String> params = new HashMap<>();
    params.put("appid", appid);
    params.put("mch_id", mch_id);
    params.put("nonce_str", System.currentTimeMillis() + "");
    params.put("bill_date", billDate);
    if (null != billType) {
      params.put("bill_type", billType.name());
    } else {
      params.put("bill_type", BillType.ALL.name());
    } 
    String sign = PaymentKit.createSign(params, paternerKey);
    params.put("sign", sign);
    String str = HttpKit.post(downloadBillUrl, PaymentKit.toXml(params));
    return PaymentKit.xmlToMap(str);
  }
}
